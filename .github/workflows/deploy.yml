name: Deploy to Docker
# Deploys data based off master branch
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  Mater_Setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.13
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  Dockerizing:
      runs-on: ubuntu-latest
      needs: [Mater_Setup]
      if: success('Mater_Setup')
      steps:
        - uses: actions/checkout@v2
        - name: Docker Login
          env:
            DOCKER_USER: "${{ secrets.DOCKER_USER }}"
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          run: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        - name: Dockerize Mater
          env:
            DOCKER_USER: "${{ secrets.DOCKER_USER }}"
            GITHUB_SHA: "${{ github.sha }}"
          run: |
            docker buildx build --tag $DOCKER_USER/mater:$GITHUB_SHA -f ./prod.dockerfile .
        - name: Docker push Mater
          env:
            DOCKER_USER: "${{ secrets.DOCKER_USER }}"
            GITHUB_SHA: "${{ github.sha }}"
          run: |
            docker push $DOCKER_USER/mater:$GITHUB_SHA
